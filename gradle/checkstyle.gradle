apply plugin: 'checkstyle'

task checkstyleReport (type: Checkstyle,dependsOn:[build]) {
    checkstyle {
        configFile = new File(rootDir, "checkcode/checkstyle.xml")
        toolVersion = '7.5.1'

    }

    checkstyleTest {
        exclude '*'
    }

    checkstyleMain {
        ignoreFailures = true
//        exclude '**/item/Curvature.java'
    }

    if (file("$buildDir/reports/checkstyle/main.xml").exists()) {
        ant.xslt(in: "$buildDir/reports/checkstyle/main.xml",
                style: new File("$rootDir/checkcode/checkstyle.xsl"),
                out: new File("$buildDir/reports/checkstyle/main.html")
        )
    }
}

apply plugin: 'findbugs'

findbugs {
    ignoreFailures = true
    sourceSets = [sourceSets.main]
    reportsDir = file("$buildDir/reports/findbugs/")
    effort = "max"
    reportLevel = "high"
//    includeFilter = file("$rootDir/checkcode/includeFilter.xml")
    excludeFilter = file("$rootDir/checkcode/excludeFilter.xml")
}

task findbugs(type: FindBugs,dependsOn:[build]) {
    //excludeFilter file('findbugs-filter.xml')
//    classes = fileTree('build/intermediates/classes/debug')
    classes = fileTree("$buildDir/classes/main")
    source = fileTree('src/main/java/')
    classpath = files()
    effort = 'max'
    ignoreFailures = true
    reports {
        xml.enabled true
        html.enabled false
        html {
            stylesheet resources.text.fromFile('$rootDir/checkcode/findbugs.xsl')
            destination "$buildDir/reports/findbugs/findbugs.html"
        }
        xml {
            destination "$buildDir/reports/findbugs/findbugs.xml"
        }
    }
}